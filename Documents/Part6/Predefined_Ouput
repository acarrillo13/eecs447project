
--Find all users and their checkouts where they returned something late and they haven't paid the late fee yet
user_id	checkout_id
20	     35
21	     96
19	     97
31	     98

-- All active checked out books
checkout_id	user_id	media_id	  checkout_date	        due_date	           return_date
12	        48	    MG00000005	2025-02-01 07:49:07	  2025-02-15 07:49:07	 null
16	        13	    MG00000004	2024-06-30 23:17:42	  2024-07-14 23:17:42	 null
23	        51	    MG00000012	2024-08-13 05:12:16	  2024-08-27 05:12:16	 null
25	        41	    MG00000014	2024-12-14 21:52:17	  2024-12-28 21:52:17	 null
31	        38	    BK00000009	2023-05-31 16:53:11	  2023-06-14 16:53:11	 null
32	        45	    BK00000019	2023-07-31 13:15:45	  2023-08-14 13:15:45	 null
37	        15	    BK00000001	2024-08-01 08:16:44	  2024-08-15 08:16:44	 null
44	        38	    MG00000013	2024-06-24 01:58:24	  2024-07-08 01:58:24	 null
46	        14	    BK00000005	2024-04-09 15:23:51	  2024-04-23 15:23:51	 null
49	        13	    MG00000003	2025-01-10 12:25:27	  2025-01-24 12:25:27	 null
52	        11	    BK00000013	2023-05-27 12:39:41	  2023-06-10 12:39:41	 null
55	        43	    MG00000004	2024-02-04 23:46:59	  2024-02-18 23:46:59	 null
57	        18	    BK00000019	2024-03-27 03:08:53	  2024-04-10 03:08:53	 null
59	        37	    BK00000019	2023-09-22 07:06:42	  2023-10-06 07:06:42	 null
62	        59	    MG00000004	2025-01-06 13:17:25	  2025-01-20 13:17:25	 null
63	        44	    BK00000020	2024-12-08 08:39:15	  2024-12-22 08:39:15	 null
71	        35	    BK00000005	2023-05-23 10:41:50	  2023-06-06 10:41:50	 null
72	        15	    MG00000019	2024-11-20 17:30:01	  2024-12-04 17:30:01	 null
74	        14	    MG00000015	2023-07-27 10:56:09	  2023-08-10 10:56:09	 null
82	        18	    MV00000019	2024-03-27 03:08:53	  2024-04-10 03:08:53	 null
84	        37	    MV00000019	2023-09-22 07:06:42	  2023-10-06 07:06:42	 null
85	        59	    MV00000004	2025-01-06 13:17:25	  2025-01-20 13:17:25	 null
86	        44	    MV00000020	2024-12-08 08:39:15	  2024-12-22 08:39:15	 null
91	        35	    MV00000005	2023-05-23 10:41:50	  2023-06-06 10:41:50	 null
92	        15	    MV00000019	2024-11-20 17:30:01	  2024-12-04 17:30:01	 null
93	        14	    MV00000015	2023-07-27 10:56:09	  2023-08-10 10:56:09	 null


-- All over due items


-- To get all the check_outs from the user in the last month
SELECT *
FROM check_outs
WHERE user_id = ? 
  AND checkout_date >= CURDATE() - INTERVAL 1 MONTH;


-- To see how many times a piece of DigitalMedia has been downloaded
SELECT COUNT(*)
FROM downloads
WHERE media_id = ?;

-- This assumes that we will charge the user $1 for every day overdue
-- To caclulate all the users current fees 
SELECT user_id, media_id, DATEDIFF(CURDATE(), due_date) AS overdue_amount
FROM checks_out
WHERE due_date < CURDATE() 
AND return_date is null
AND user_id = ?;

-- To get all the ____ from the ___ type of media
SELECT *
FROM Book;

SELECT *
FROM Movie;

SELECT *
FROM Magazine

SELECT * 
FROM DigitalMedia

-- To get all the users checked out media
SELECT c.user_id, c.media_id, 'Book' AS media_type, b.title, b.genre, NULL AS director, NULL AS publisher
FROM checks_out c
JOIN Book b ON c.media_id = b.media_id

UNION ALL

SELECT c.user_id, c.media_id, 'Movie' AS media_type, mv.title, mv.genre, mv.director, mv.publisher
FROM checks_out c
JOIN Movie mv ON c.media_id = mv.media_id

UNION ALL

SELECT c.user_id, c.media_id, 'Magazine' AS media_type, mg.title, mg.genre, NULL AS director, mg.publication AS publisher
FROM checks_out c
JOIN Magazine mg ON c.media_id = mg.media_id

UNION ALL

SELECT d.user_id, d.media_id, 'DigitalMedia' AS media_type, dm.title, dm.genre, NULL AS director, dm.publisher
FROM downloads d
JOIN DigitalMedia dm ON d.media_id = dm.media_id

WHERE d.user_id = ?;

--Users who have never checked anything out 
SELECT u.user_id, u.username
FROM User u
LEFT JOIN checks_out c ON u.user_id = c.user_id
WHERE c.user_id IS NULL;

-- top 5 most downloaded content
SELECT dm.title, COUNT(*) AS download_count
FROM downloads d
JOIN DigitalMedia dm ON d.media_id = dm.media_id
GROUP BY d.media_id
ORDER BY download_count DESC
LIMIT 5;

-- all reserved items
SELECT r.user_id, r.media_id, r.reserve_start, r.reserve_end
FROM reserves r
WHERE reserve_end IS NULL OR reserve_end > CURDATE();

-- Find a users total fees paid
select sum(amount) as total_fees
from pays_for
where user_id = ?;
